Terminals unused in grammar

   STRING
   VOID
   INT
   BOOL
   CLASS
   PUBLIC
   STATIC
   EXTENDS
   THIS
   MAIN
   IF
   ELSE
   WHILE
   FOR
   RETURN
   NIL
   LBRACE
   RBRACE
   LBRACKET
   RBRACKET
   EQUEQU
   MOD
   LESS
   GREATER
   TRUE
   FALSE
   AND
   OR
   NOT
   COMMA
   DOT
   AMPERSAND
   ERROR


Grammar

    0 $accept: Program $end

    1 Program: Statement

    2 Statement: Identifier EQU Expression SEMI

    3 Expression: NUM
    4           | Identifier
    5           | Expression ADD Expression
    6           | Expression SUB Expression
    7           | Expression MUL Expression
    8           | Expression DIV Expression
    9           | LPAREN Expression RPAREN

   10 Identifier: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 3
ID (259) 10
STRING (260)
VOID (261)
INT (262)
BOOL (263)
CLASS (264)
PUBLIC (265)
STATIC (266)
EXTENDS (267)
THIS (268)
MAIN (269)
IF (270)
ELSE (271)
WHILE (272)
FOR (273)
RETURN (274)
NIL (275)
LPAREN (276) 9
RPAREN (277) 9
LBRACE (278)
RBRACE (279)
LBRACKET (280)
RBRACKET (281)
EQU (282) 2
EQUEQU (283)
ADD (284) 5
SUB (285) 6
MUL (286) 7
DIV (287) 8
MOD (288)
LESS (289)
GREATER (290)
TRUE (291)
FALSE (292)
AND (293)
OR (294)
NOT (295)
COMMA (296)
DOT (297)
SEMI (298) 2
AMPERSAND (299)
ERROR (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Statement (48)
    on left: 2, on right: 1
Expression (49)
    on left: 3 4 5 6 7 8 9, on right: 2 5 6 7 8 9
Identifier (50)
    on left: 10, on right: 2 4


State 0

    0 $accept: . Program $end

    ID  shift, and go to state 1

    Program     go to state 2
    Statement   go to state 3
    Identifier  go to state 4


State 1

   10 Identifier: ID .

    $default  reduce using rule 10 (Identifier)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: Statement .

    $default  reduce using rule 1 (Program)


State 4

    2 Statement: Identifier . EQU Expression SEMI

    EQU  shift, and go to state 6


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    2 Statement: Identifier EQU . Expression SEMI

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 9
    Identifier  go to state 10


State 7

    3 Expression: NUM .

    $default  reduce using rule 3 (Expression)


State 8

    9 Expression: LPAREN . Expression RPAREN

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 11
    Identifier  go to state 10


State 9

    2 Statement: Identifier EQU Expression . SEMI
    5 Expression: Expression . ADD Expression
    6           | Expression . SUB Expression
    7           | Expression . MUL Expression
    8           | Expression . DIV Expression

    ADD   shift, and go to state 12
    SUB   shift, and go to state 13
    MUL   shift, and go to state 14
    DIV   shift, and go to state 15
    SEMI  shift, and go to state 16


State 10

    4 Expression: Identifier .

    $default  reduce using rule 4 (Expression)


State 11

    5 Expression: Expression . ADD Expression
    6           | Expression . SUB Expression
    7           | Expression . MUL Expression
    8           | Expression . DIV Expression
    9           | LPAREN Expression . RPAREN

    RPAREN  shift, and go to state 17
    ADD     shift, and go to state 12
    SUB     shift, and go to state 13
    MUL     shift, and go to state 14
    DIV     shift, and go to state 15


State 12

    5 Expression: Expression ADD . Expression

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 18
    Identifier  go to state 10


State 13

    6 Expression: Expression SUB . Expression

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 19
    Identifier  go to state 10


State 14

    7 Expression: Expression MUL . Expression

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 20
    Identifier  go to state 10


State 15

    8 Expression: Expression DIV . Expression

    NUM     shift, and go to state 7
    ID      shift, and go to state 1
    LPAREN  shift, and go to state 8

    Expression  go to state 21
    Identifier  go to state 10


State 16

    2 Statement: Identifier EQU Expression SEMI .

    $default  reduce using rule 2 (Statement)


State 17

    9 Expression: LPAREN Expression RPAREN .

    $default  reduce using rule 9 (Expression)


State 18

    5 Expression: Expression . ADD Expression
    5           | Expression ADD Expression .
    6           | Expression . SUB Expression
    7           | Expression . MUL Expression
    8           | Expression . DIV Expression

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 5 (Expression)


State 19

    5 Expression: Expression . ADD Expression
    6           | Expression . SUB Expression
    6           | Expression SUB Expression .
    7           | Expression . MUL Expression
    8           | Expression . DIV Expression

    MUL  shift, and go to state 14
    DIV  shift, and go to state 15

    $default  reduce using rule 6 (Expression)


State 20

    5 Expression: Expression . ADD Expression
    6           | Expression . SUB Expression
    7           | Expression . MUL Expression
    7           | Expression MUL Expression .
    8           | Expression . DIV Expression

    $default  reduce using rule 7 (Expression)


State 21

    5 Expression: Expression . ADD Expression
    6           | Expression . SUB Expression
    7           | Expression . MUL Expression
    8           | Expression . DIV Expression
    8           | Expression DIV Expression .

    $default  reduce using rule 8 (Expression)
