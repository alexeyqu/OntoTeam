Terminals unused in grammar

   ID
   STRING
   VOID
   INT
   BOOL
   CLASS
   PUBLIC
   STATIC
   EXTENDS
   THIS
   MAIN
   IF
   ELSE
   WHILE
   FOR
   RETURN
   NIL
   LPAREN
   RPAREN
   LBRACE
   RBRACE
   LBRACKET
   RBRACKET
   EQU
   EQUEQU
   MOD
   LESS
   GREATER
   TRUE
   FALSE
   AND
   OR
   NOT
   COMMA
   DOT
   SEMI
   AMPERSAND
   ERROR


Grammar

    0 $accept: Program $end

    1 Program: Expression

    2 Expression: NUM
    3           | Expression ADD Expression
    4           | Expression SUB Expression
    5           | Expression MUL Expression
    6           | Expression DIV Expression


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 2
ID (259)
STRING (260)
VOID (261)
INT (262)
BOOL (263)
CLASS (264)
PUBLIC (265)
STATIC (266)
EXTENDS (267)
THIS (268)
MAIN (269)
IF (270)
ELSE (271)
WHILE (272)
FOR (273)
RETURN (274)
NIL (275)
LPAREN (276)
RPAREN (277)
LBRACE (278)
RBRACE (279)
LBRACKET (280)
RBRACKET (281)
EQU (282)
EQUEQU (283)
ADD (284) 3
SUB (285) 4
MUL (286) 5
DIV (287) 6
MOD (288)
LESS (289)
GREATER (290)
TRUE (291)
FALSE (292)
AND (293)
OR (294)
NOT (295)
COMMA (296)
DOT (297)
SEMI (298)
AMPERSAND (299)
ERROR (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Expression (48)
    on left: 2 3 4 5 6, on right: 1 3 4 5 6


State 0

    0 $accept: . Program $end

    NUM  shift, and go to state 1

    Program     go to state 2
    Expression  go to state 3


State 1

    2 Expression: NUM .

    $default  reduce using rule 2 (Expression)


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: Expression .
    3 Expression: Expression . ADD Expression
    4           | Expression . SUB Expression
    5           | Expression . MUL Expression
    6           | Expression . DIV Expression

    ADD  shift, and go to state 5
    SUB  shift, and go to state 6
    MUL  shift, and go to state 7
    DIV  shift, and go to state 8

    $default  reduce using rule 1 (Program)


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    3 Expression: Expression ADD . Expression

    NUM  shift, and go to state 1

    Expression  go to state 9


State 6

    4 Expression: Expression SUB . Expression

    NUM  shift, and go to state 1

    Expression  go to state 10


State 7

    5 Expression: Expression MUL . Expression

    NUM  shift, and go to state 1

    Expression  go to state 11


State 8

    6 Expression: Expression DIV . Expression

    NUM  shift, and go to state 1

    Expression  go to state 12


State 9

    3 Expression: Expression . ADD Expression
    3           | Expression ADD Expression .
    4           | Expression . SUB Expression
    5           | Expression . MUL Expression
    6           | Expression . DIV Expression

    MUL  shift, and go to state 7
    DIV  shift, and go to state 8

    $default  reduce using rule 3 (Expression)


State 10

    3 Expression: Expression . ADD Expression
    4           | Expression . SUB Expression
    4           | Expression SUB Expression .
    5           | Expression . MUL Expression
    6           | Expression . DIV Expression

    MUL  shift, and go to state 7
    DIV  shift, and go to state 8

    $default  reduce using rule 4 (Expression)


State 11

    3 Expression: Expression . ADD Expression
    4           | Expression . SUB Expression
    5           | Expression . MUL Expression
    5           | Expression MUL Expression .
    6           | Expression . DIV Expression

    $default  reduce using rule 5 (Expression)


State 12

    3 Expression: Expression . ADD Expression
    4           | Expression . SUB Expression
    5           | Expression . MUL Expression
    6           | Expression . DIV Expression
    6           | Expression DIV Expression .

    $default  reduce using rule 6 (Expression)
