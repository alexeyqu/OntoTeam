node	node
RecPrint	RecPrint
ifound	ifound
RemoveRight	RemoveRight
auxkey2	auxkey2
c_node	c_node
found	found
current_node	current_node
Search	Search
left	left
Compare	Compare
Init	Init
Insert	Insert
val	val
main	main
ntb	ntb
String	String
auxkey1	auxkey1
GetLeft	GetLeft
Tree	Tree
boolean	boolean
Start	Start
int[]	int[]
BT	BT
BinaryTree	BinaryTree
SetHas_Left	SetHas_Left
Print	Print
Delete	Delete
SetHas_Right	SetHas_Right
String[]	String[]
int	int
???	???
void	void
a	a
num1	num1
right	right
has_left	has_left
new_node	new_node
has_right	has_right
cont	cont
my_null	my_null
key_aux	key_aux
v_key	v_key
SetRight	SetRight
parent_node	parent_node
rn	rn
is_root	is_root
SetLeft	SetLeft
Remove	Remove
ln	ln
p_node	p_node
GetRight	GetRight
RemoveLeft	RemoveLeft
GetKey	GetKey
SetKey	SetKey
root	root
GetHas_Right	GetHas_Right
nti	nti
GetHas_Left	GetHas_Left
key	key
num2	num2
