0xb4f03d14	node
0xb4f03db4	RecPrint
0xb4f03254	ifound
0xb4f02d94	RemoveLeft
0xb4f02e74	auxkey1
0xb4f02634	found
0xb4f02ed4	c_node
0xb4f01c74	current_node
0xb4f01d14	cont
0xb4f01fb4	num2
0xb4f020f4	Remove
0xb4f01ff4	num1
0xb4f010d4	SetHas_Right
0xb4f01154	val
0xb4f01194	SetHas_Left
0xb4f001d4	root
0xb4f00334	a
0xb4f00214	Tree
0xb4f002b4	Start
0xb4f02f34	p_node
0xb4f01cd4	key_aux
0xb4f01034	Compare
0xb4f00554	if
0xb4f013b4	GetLeft
0xb4f00374	BinaryTree
0xb4f00614	String
0xb4f00414	this
0xb4f011f4	GetHas_Left
0xb4f02694	parent_node
0xb4f00494	true
0xb4f00594	boolean
0xb4f00754	public
0xb4f02cb4	RemoveRight
0xb4f006d4	static
0xb4f00f74	Insert
0xb4f005d4	int
0xb4f00454	false
0xb4f003d4	new
0xb4f017d4	has_left
0xb4f01434	GetRight
0xb4f00694	void
0xb4f00714	private
0xb4f00654	extends
0xb4f00194	ntb
0xb4f009f4	Delete
0xb4f00154	nti
0xb4f02e34	auxkey2
0xb4f00094	Init
0xb4f00014	Print
0xb4f007b4	class
0xb4f00c14	Search
0xb4f025f4	is_root
0xb4f01d74	new_node
0xb4f00854	right
0xb4f008b4	left
0xb4f00814	key
0xb4f00514	while
0xb4f01614	SetRight
0xb4f01794	has_right
0xb4f01734	my_null
0xb4f016d4	v_key
0xb4f015b4	rn
0xb4f01534	SetLeft
0xb4f01354	GetKey
0xb4f002f4	BT
0xb4f014d4	ln
0xb4f004d4	return
0xb4f012f4	SetKey
0xb4f01254	GetHas_Right
