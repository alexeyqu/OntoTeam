0xb4e03814	node
0xb4e038d4	RecPrint
0xb4e03dd4	ifound
0xb4e02a14	RemoveLeft
0xb4e02b14	auxkey1
0xb4e02394	found
0xb4e02bb4	c_node
0xb4e01a54	current_node
0xb4e01b14	cont
0xb4e01e74	num2
0xb4e02df4	Remove
0xb4e01ed4	num1
0xb4e02ab4	auxkey2
0xb4e001b4	Init
0xb4e00274	nti
0xb4e00334	root
0xb4e004b4	a
0xb4e00374	Tree
0xb4e00434	Start
0xb4e02c14	p_node
0xb4e01ab4	key_aux
0xb4e01f34	Compare
0xb4e00614	if
0xb4e013f4	GetLeft
0xb4e01114	SetHas_Left
0xb4e004f4	BinaryTree
0xb4e00574	this
0xb4e01194	GetHas_Left
0xb4e006b4	public
0xb4e02934	RemoveRight
0xb4e00674	static
0xb4e00094	Insert
0xb4e00594	false
0xb4e00554	new
0xb4e008b4	has_left
0xb4e01474	GetRight
0xb4e00654	void
0xb4e00694	private
0xb4e02434	parent_node
0xb4e005b4	true
0xb4e002d4	ntb
0xb4e00b14	Delete
0xb4e00634	extends
0xb4e00134	Print
0xb4e006f4	class
0xb4e00d34	Search
0xb4e01014	SetHas_Right
0xb4e02334	is_root
0xb4e01bb4	new_node
0xb4e00974	right
0xb4e009d4	left
0xb4e00914	key
0xb4e005f4	while
0xb4e01674	SetRight
0xb4e00854	has_right
0xb4e017f4	my_null
0xb4e01754	v_key
0xb4e01614	rn
0xb4e01574	SetLeft
0xb4e01374	GetKey
0xb4e00474	BT
0xb4e01514	ln
0xb4e005d4	return
0xb4e012f4	SetKey
0xb4e01214	GetHas_Right
0xb4e010b4	val
