0xb4f03814	node
0xb4f038d4	RecPrint
0xb4f03dd4	ifound
0xb4f02a14	RemoveLeft
0xb4f02b14	auxkey1
0xb4f02394	found
0xb4f02bb4	c_node
0xb4f01a54	current_node
0xb4f01b14	cont
0xb4f01e74	num2
0xb4f02df4	Remove
0xb4f01ed4	num1
0xb4f02ab4	auxkey2
0xb4f001b4	Init
0xb4f00274	nti
0xb4f00334	root
0xb4f004b4	a
0xb4f00374	Tree
0xb4f00434	Start
0xb4f02c14	p_node
0xb4f01ab4	key_aux
0xb4f01f34	Compare
0xb4f00614	if
0xb4f013f4	GetLeft
0xb4f01114	SetHas_Left
0xb4f004f4	BinaryTree
0xb4f00574	this
0xb4f01194	GetHas_Left
0xb4f006b4	public
0xb4f02934	RemoveRight
0xb4f00674	static
0xb4f00094	Insert
0xb4f00594	false
0xb4f00554	new
0xb4f008b4	has_left
0xb4f01474	GetRight
0xb4f00654	void
0xb4f00694	private
0xb4f02434	parent_node
0xb4f005b4	true
0xb4f002d4	ntb
0xb4f00b14	Delete
0xb4f00634	extends
0xb4f00134	Print
0xb4f006f4	class
0xb4f00d34	Search
0xb4f01014	SetHas_Right
0xb4f02334	is_root
0xb4f01bb4	new_node
0xb4f00974	right
0xb4f009d4	left
0xb4f00914	key
0xb4f005f4	while
0xb4f01674	SetRight
0xb4f00854	has_right
0xb4f017f4	my_null
0xb4f01754	v_key
0xb4f01614	rn
0xb4f01574	SetLeft
0xb4f01374	GetKey
0xb4f00474	BT
0xb4f01514	ln
0xb4f005d4	return
0xb4f012f4	SetKey
0xb4f01214	GetHas_Right
0xb4f010b4	val
